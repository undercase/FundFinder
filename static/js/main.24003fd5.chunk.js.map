{"version":3,"sources":["Data.js","SearchBar.js","Fund.js","Tag.js","Tags.js","App.js","serviceWorker.js","index.js"],"names":["funds","name","description","tags","title","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","value","target","handleSearchChange","state","react_default","a","createElement","className","type","placeholder","onChange","Component","Fund","data","Tag","handleClick","e","toggleTag","tagName","selected","classes","concat","onClick","children","Tags","tagList","map","tag","Tag_Tag","key","selectedTags","has","fuseOptions","shouldSort","threshold","location","distance","maxPatternLength","minMachCharLength","keys","App","searchValue","toggleSearchTag","previousState","searchTags","Set","delete","add","fundSearch","Fuse","results","search","result","Fund_Fund","SearchBar_SearchBar","Tags_Tags","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24003fd5.chunk.js","sourcesContent":["export const funds = [\r\n  {\r\n    name: \"Academic Advancement Program\",\r\n    description: \"AAP, the largest university-based, student-diversity program in the nation, turns unlikely students into successful graduates and future leaders.\"\r\n  },\r\n  {\r\n    name: \"Achievement Scholarship\",\r\n    description: \"Aiding undergraduate students who demonstrate great need and high academic merit.\"\r\n  },\r\n  {\r\n    name: \"Ahmanson Adult Congenital Heart Disease Center\",\r\n    description: \"Providing patient care, diagnostic, research and educational facilities for adults with congenital heart disease.\"\r\n  },\r\n  {\r\n    name: \"Alumni Scholarships General Fund\",\r\n    description: \"Supporting leadership and academic excellence by giving to one of UCLA's longest-standing scholarship programs.\"\r\n  },\r\n  {\r\n    name: \"American Indian Studies Center\",\r\n    description: \"Fostering innovative academic research and scholarship in the field of American Indian Studies.\"\r\n  },\r\n  {\r\n    name: \"Arts & Global Health Center\",\r\n    description: \"Unleashing the transformative power of the arts to advance global health.\"\r\n  },\r\n  {\r\n    name: \"Asian American Studies Center\",\r\n    description: \"Transforming education, research, community service and the arts as they relate to Asian American and Pacific Islander communities.\"\r\n  },\r\n  {\r\n    name: \"Biomedical Graduate Education\",\r\n    description: \"Supporting UCLAâ€™s biomedical Ph.D. students, no matter what size the gift, drives groundbreaking research and advances the future of medicine.\"\r\n  },\r\n  {\r\n    name: \"Broad STEM Cell Annual Fund\",\r\n    description: \"The UCLA Broad Stem Cell Research Center is working to transform patient care through the development of personalized stem cell-based therapies for a wide range of diseases.\"\r\n  },\r\n  {\r\n    name: \"Bruin Guardian Scholars\",\r\n    description: \"Setting up current and former foster youth for success.\"\r\n  },\r\n  {\r\n    name: \"Bruin Woods Centennial Scholarship\",\r\n    description: \"Supporting the Bruin Woods student staff who make family camp memorable and magical.\"\r\n  },\r\n  {\r\n    name: \"California Center for Population Research\",\r\n    description: \"The California Center for Population Research at UCLA is a campus-wide interdisciplinary research co-operative comprising nearly 200 faculty and researchers from disciplines spanning the behavioral, health, medical and social sciences.\"\r\n  }\r\n];\r\n\r\nexport const tags = [\r\n  {\r\n    name: 'tag1',\r\n    title: 'Tag #1'\r\n  },\r\n  {\r\n    name: 'tag2',\r\n    title: 'Tag #2'\r\n  },\r\n  {\r\n    name: 'tag3',\r\n    title: 'Tag #3'\r\n  }\r\n];\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: ''\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n    this.props.handleSearchChange(event.target.value);\r\n  }\r\n  render() {\r\n    let placeholder = 'Search for a Fund...';\r\n    return (\r\n      <input className='searchBar' type=\"text\" placeholder={placeholder} value={this.state.value} onChange={this.handleChange} />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Fund extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fund\">\r\n        <h1>{this.props.data.name}</h1>\r\n        <p>{this.props.data.description}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Tag extends Component {\r\n  handleClick = (e) => {\r\n    this.props.toggleTag(this.props.tagName);\r\n  }\r\n  render() {\r\n    const selected = this.props.selected ? 'selected' : '';\r\n    const classes = `tag ${selected}`;\r\n    return (\r\n      <div className={classes} onClick={this.handleClick}>\r\n        <h3>{this.props.children}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Tag from './Tag.js';\r\n\r\nimport { tags as tagList } from './Data.js';\r\n\r\nexport default class Tags extends Component {\r\n  render() {\r\n    const tags = tagList.map(tag => <Tag key={tag.name} tagName={tag.name} selected={this.props.selectedTags.has(tag.name)} toggleTag={this.props.toggleTag}>{tag.title}</Tag>);\r\n    return (\r\n      <div className=\"tags\">\r\n        {tags}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Fuse from 'fuse.js';\r\n\r\nimport './App.css';\r\n\r\nimport { funds } from './Data.js';\r\n\r\nimport SearchBar from './SearchBar.js';\r\nimport Fund from './Fund.js';\r\nimport Tags from './Tags.js';\r\n\r\nconst fuseOptions = {\r\n  shouldSort: true,\r\n  threshold: 0.6,\r\n  location: 0,\r\n  distance: 100,\r\n  maxPatternLength: 32,\r\n  minMachCharLength: 1,\r\n  keys: [\r\n    'name',\r\n    'description'\r\n  ]\r\n};\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: '',\r\n      searchTags: new Set([])\r\n    };\r\n  }\r\n  handleSearchChange = (searchValue) => {\r\n    this.setState({ searchValue });\r\n  }\r\n  toggleSearchTag = (tag) => {\r\n    this.setState(previousState => {\r\n      let searchTags = new Set(previousState.searchTags);\r\n      if (previousState.searchTags.has(tag)) {\r\n        searchTags.delete(tag);\r\n      } else {\r\n        searchTags.add(tag);\r\n      }\r\n      return { searchTags };\r\n    });\r\n  }\r\n  render() {\r\n    let fundSearch = new Fuse(funds, fuseOptions);\r\n    const searchResults = this.state.searchValue ? fundSearch.search(this.state.searchValue) : funds;\r\n    const results = searchResults.map((result) => {\r\n      return (\r\n        <Fund key={result.name} data={result} />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar handleSearchChange={this.handleSearchChange} />\r\n        <Tags selectedTags={this.state.searchTags} toggleTag={this.toggleSearchTag} />\r\n        <div className=\"funds\">\r\n          {results}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}