{"version":3,"sources":["Data.js","SearchBar.js","Fund.js","App.js","serviceWorker.js","index.js"],"names":["funds","name","description","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","value","target","handleSearchChange","state","react_default","a","createElement","className","type","placeholder","onChange","Component","Fund","data","fuseOptions","shouldSort","threshold","location","distance","maxPatternLength","minMachCharLength","keys","App","searchValue","fundSearch","Fuse","results","search","map","result","Fund_Fund","key","SearchBar_SearchBar","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOAmDeA,SAnDD,CACZ,CACEC,KAAM,+BACNC,YAAa,qJAEf,CACED,KAAM,0BACNC,YAAa,qFAEf,CACED,KAAM,iDACNC,YAAa,qHAEf,CACED,KAAM,mCACNC,YAAa,mHAEf,CACED,KAAM,iCACNC,YAAa,mGAEf,CACED,KAAM,8BACNC,YAAa,6EAEf,CACED,KAAM,gCACNC,YAAa,uIAEf,CACED,KAAM,gCACNC,YAAa,uJAEf,CACED,KAAM,8BACNC,YAAa,iLAEf,CACED,KAAM,0BACNC,YAAa,2DAEf,CACED,KAAM,qCACNC,YAAa,wFAEf,CACED,KAAM,4CACNC,YAAa,iPC7CIC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CACZC,MAAOF,EAAMG,OAAOD,QAEtBV,EAAKD,MAAMa,mBAAmBJ,EAAMG,OAAOD,QAR3CV,EAAKa,MAAQ,CACXH,MAAO,IAHQV,wEAcjB,OACEc,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYC,KAAK,OAAOC,YAFzB,uBAEmDT,MAAOP,KAAKU,MAAMH,MAAOU,SAAUjB,KAAKI,sBAhB1Ec,aCAlBC,mLAEjB,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAKb,KAAKJ,MAAMwB,KAAK3B,MACrBkB,EAAAC,EAAAC,cAAA,SAAIb,KAAKJ,MAAMwB,KAAK1B,qBALMwB,aCQ5BG,EAAc,CAClBC,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,iBAAkB,GAClBC,kBAAmB,EACnBC,KAAM,CACJ,OACA,gBAIiBC,cACnB,SAAAA,EAAYjC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACjBhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMJ,KAKRa,mBAAqB,SAACqB,GACpBjC,EAAKS,SAAS,CAAEwB,iBALhBjC,EAAKa,MAAQ,CACXoB,YAAa,IAHEjC,wEAUjB,IAAIkC,EAAa,IAAIC,IAAKxC,EAAO6B,GAE3BY,GADgBjC,KAAKU,MAAMoB,YAAcC,EAAWG,OAAOlC,KAAKU,MAAMoB,aAAetC,GAC7D2C,IAAI,SAACC,GACjC,OACEzB,EAAAC,EAAAC,cAACwB,EAAD,CAAMC,IAAKF,EAAO3C,KAAM2B,KAAMgB,MAGlC,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAD,CAAW9B,mBAAoBT,KAAKS,qBACpCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZmB,WAtBsBf,aCXbsB,QACW,cAA7BC,OAAOjB,SAASkB,UAEe,UAA7BD,OAAOjB,SAASkB,UAEhBD,OAAOjB,SAASkB,SAASC,MACvB,2DCZNC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5b9572a3.chunk.js","sourcesContent":["const funds = [\r\n  {\r\n    name: \"Academic Advancement Program\",\r\n    description: \"AAP, the largest university-based, student-diversity program in the nation, turns unlikely students into successful graduates and future leaders.\"\r\n  },\r\n  {\r\n    name: \"Achievement Scholarship\",\r\n    description: \"Aiding undergraduate students who demonstrate great need and high academic merit.\"\r\n  },\r\n  {\r\n    name: \"Ahmanson Adult Congenital Heart Disease Center\",\r\n    description: \"Providing patient care, diagnostic, research and educational facilities for adults with congenital heart disease.\"\r\n  },\r\n  {\r\n    name: \"Alumni Scholarships General Fund\",\r\n    description: \"Supporting leadership and academic excellence by giving to one of UCLA's longest-standing scholarship programs.\"\r\n  },\r\n  {\r\n    name: \"American Indian Studies Center\",\r\n    description: \"Fostering innovative academic research and scholarship in the field of American Indian Studies.\"\r\n  },\r\n  {\r\n    name: \"Arts & Global Health Center\",\r\n    description: \"Unleashing the transformative power of the arts to advance global health.\"\r\n  },\r\n  {\r\n    name: \"Asian American Studies Center\",\r\n    description: \"Transforming education, research, community service and the arts as they relate to Asian American and Pacific Islander communities.\"\r\n  },\r\n  {\r\n    name: \"Biomedical Graduate Education\",\r\n    description: \"Supporting UCLAâ€™s biomedical Ph.D. students, no matter what size the gift, drives groundbreaking research and advances the future of medicine.\"\r\n  },\r\n  {\r\n    name: \"Broad STEM Cell Annual Fund\",\r\n    description: \"The UCLA Broad Stem Cell Research Center is working to transform patient care through the development of personalized stem cell-based therapies for a wide range of diseases.\"\r\n  },\r\n  {\r\n    name: \"Bruin Guardian Scholars\",\r\n    description: \"Setting up current and former foster youth for success.\"\r\n  },\r\n  {\r\n    name: \"Bruin Woods Centennial Scholarship\",\r\n    description: \"Supporting the Bruin Woods student staff who make family camp memorable and magical.\"\r\n  },\r\n  {\r\n    name: \"California Center for Population Research\",\r\n    description: \"The California Center for Population Research at UCLA is a campus-wide interdisciplinary research co-operative comprising nearly 200 faculty and researchers from disciplines spanning the behavioral, health, medical and social sciences.\"\r\n  }\r\n];\r\n\r\nexport default funds;\r\n","import React, {Component} from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: ''\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n    this.props.handleSearchChange(event.target.value);\r\n  }\r\n  render() {\r\n    let placeholder = 'Search for a Fund...';\r\n    return (\r\n      <input className='searchBar' type=\"text\" placeholder={placeholder} value={this.state.value} onChange={this.handleChange} />\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport default class Fund extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fund\">\r\n        <h1>{this.props.data.name}</h1>\r\n        <p>{this.props.data.description}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Fuse from 'fuse.js';\n\nimport './App.css';\n\nimport funds from './Data.js';\n\nimport SearchBar from './SearchBar.js';\nimport Fund from './Fund.js';\n\nconst fuseOptions = {\n  shouldSort: true,\n  threshold: 0.6,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMachCharLength: 1,\n  keys: [\n    'name',\n    'description'\n  ]\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: ''\n    };\n  }\n  handleSearchChange = (searchValue) => {\n    this.setState({ searchValue });\n  }\n  render() {\n    let fundSearch = new Fuse(funds, fuseOptions);\n    const searchResults = this.state.searchValue ? fundSearch.search(this.state.searchValue) : funds;\n    const results = searchResults.map((result) => {\n      return (\n        <Fund key={result.name} data={result} />\n      );\n    });\n    return (\n      <div className=\"App\">\n        <SearchBar handleSearchChange={this.handleSearchChange} />\n        <div className=\"funds\">\n          {results}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}